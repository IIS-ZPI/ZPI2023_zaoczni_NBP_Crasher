name: Create Release

run-name: Create Release ${{github.event.pull_request.title}}

on:
  pull_request:
    types: [closed]

permissions:
  contents: write

env:
  success_ico: ":white_check_mark:"
  failure_ico: ":x:"
  cancel_ico: ":no_entry_sign:"
  pre_release: ${{ github.base_ref == 'develop' && true || false }}
  latest_release: ${{ github.base_ref == 'release' && true || false }}

jobs:
  Check:
    uses: ./.github/workflows/check-version.yml
    secrets: inherit

  Create:
    needs: Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release
        id: create
        if: needs.Check.outputs.release_id == 'null'
        run: |
          release=$(
            curl -L -s --fail-with-body \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --url https://api.github.com/repos/${{ github.repository }}/releases \
              -d '{
                "tag_name":"${{ needs.Check.outputs.version_tag }}",
                "name":"${{ needs.Check.outputs.version_tag }} Release",
                "body":"Created by ${{github.actor}}",
                "draft":false,
                "prerelease":${{ env.pre_release }},
                "generate_release_notes":false
              }'
            )

          release_id="$(echo "$release" | jq .id)"

          if [ "$release_id" == 'null' ]; then
            echo "Failed to create Release"
            echo "# ${{ env.failure_ico }} Failed to create Release. ${{ env.failure_ico }}" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "release_id=$release_id" >> $GITHUB_OUTPUT
      - name: Update Release
        if: needs.Check.outputs.release_id != 'null'
        run: |
          curl -L -s --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --url https://api.github.com/repos/${{ github.repository }}/releases/${{ needs.Check.outputs.release_id }} \
            -d '{
              "tag_name":"${{ needs.Check.outputs.version_tag }}",
              "name":"${{ needs.Check.outputs.version_tag }} Release",
              "body":"Created by ${{github.actor}}",
              "draft":false,
              "prerelease":${{ env.pre_release }},
              "make_latest":${{ env.latest_release }},
              "generate_release_notes":false
            }'

      - name: Update Tag reference
        run: |
          curl -L -s --fail-with-body \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --url https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${{ needs.Check.outputs.version_tag }} \
            -d '{ 
              "sha":"${{ github.sha }}",
              "force":true
            }'

      - name: Summary
        if: success()
        run: |
          echo "${{ env.success_ico }} Release created successfully ${{ env.success_ico }}" >> $GITHUB_STEP_SUMMARY
